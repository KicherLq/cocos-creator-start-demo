{"version":3,"sources":["file:///C:/Users/ctwl/Downloads/cocos-nodejs-io-game-start-demo-master/apps/client/assets/Scripts/Global/ObjectPoolManager.ts"],"names":["ObjectPoolManager","Node","instantiate","Singleton","DataManager","objectPool","map","Map","Instance","GetInstance","get","type","setParent","stage","has","set","container","nodes","length","prefab","prefabMap","entity","name","getChildByName","active","pop","ret","node","push"],"mappings":";;;0HAMaA,iB;;;;;;;;;;;;;;;;;;;;;;;AANQC,MAAAA,I,OAAAA,I;AAIZC,MAAAA,W,OAAAA,W;;AAHFC,MAAAA,S;;AAEAC,MAAAA,W;;;;;;;;;;;mCAGMJ,iB,GAAN,MAAMA,iBAAN;AAAA;AAAA,kCAA0C;AAAA;AAAA;AAAA,eAKrCK,UALqC,GAKlB,IALkB;AAAA,eAMrCC,GANqC,GAMF,IAAIC,GAAJ,EANE;AAAA;;AAC1B,mBAARC,QAAQ,GAAG;AAClB,iBAAO,MAAMC,WAAN,EAAP;AACH;;AAKMC,QAAAA,GAAG,CAACC,IAAD,EAAuB;AAC7B,cAAG,CAAC,KAAKN,UAAT,EAAqB;AACjB,iBAAKA,UAAL,GAAkB,IAAIJ,IAAJ,CAAS,YAAT,CAAlB;AACA,iBAAKI,UAAL,CAAgBO,SAAhB,CAA0B;AAAA;AAAA,4CAAYJ,QAAZ,CAAqBK,KAA/C;AACH;;AAED,cAAG,CAAC,KAAKP,GAAL,CAASQ,GAAT,CAAaH,IAAb,CAAJ,EAAwB;AACpB,iBAAKL,GAAL,CAASS,GAAT,CAAaJ,IAAb,EAAmB,EAAnB;AACA,kBAAMK,SAAS,GAAG,IAAIf,IAAJ,CAASU,IAAI,GAAG,MAAhB,CAAlB;AACAK,YAAAA,SAAS,CAACJ,SAAV,CAAoB,KAAKP,UAAzB;AACH;;AAED,gBAAMY,KAAK,GAAG,KAAKX,GAAL,CAASI,GAAT,CAAaC,IAAb,CAAd;;AACA,cAAG,CAACM,KAAK,CAACC,MAAV,EAAkB;AACd,kBAAMC,MAAM,GAAG;AAAA;AAAA,4CAAYX,QAAZ,CAAqBY,SAArB,CAA+BV,GAA/B,CAAmCC,IAAnC,CAAf;AACA,kBAAMU,MAAM,GAAGnB,WAAW,CAACiB,MAAD,CAA1B;AACAE,YAAAA,MAAM,CAACC,IAAP,GAAcX,IAAd;AACAU,YAAAA,MAAM,CAACT,SAAP,CAAiB,KAAKP,UAAL,CAAgBkB,cAAhB,CAA+BZ,IAAI,GAAG,MAAtC,CAAjB;AACAU,YAAAA,MAAM,CAACG,MAAP,GAAgB,KAAhB;AACA,mBAAOH,MAAP;AACH,WAPD,MAOO;AACH,kBAAMA,MAAM,GAAGJ,KAAK,CAACQ,GAAN,EAAf;AACAJ,YAAAA,MAAM,CAACG,MAAP,GAAgB,IAAhB;AACA,mBAAOH,MAAP;AACH;AACJ;;AAEMK,QAAAA,GAAG,CAACC,IAAD,EAAa;AACnBA,UAAAA,IAAI,CAACH,MAAL,GAAc,KAAd;AACA,eAAKlB,GAAL,CAASI,GAAT,CAAaiB,IAAI,CAACL,IAAlB,EAA0CM,IAA1C,CAA+CD,IAA/C;AACH;;AAtC4C,O","sourcesContent":["import { _decorator, Node } from \"cc\";\r\nimport Singleton from \"../Base/Singleton\";\r\nimport { EntityTypeEnum } from \"../Common/Enum\";\r\nimport DataManager from \"./DataManager\";\r\nimport { instantiate } from \"cc\";\r\n\r\nexport class ObjectPoolManager extends Singleton {\r\n    static get Instance() {\r\n        return super.GetInstance<ObjectPoolManager>();\r\n    }\r\n\r\n    private objectPool: Node = null;\r\n    private map: Map<EntityTypeEnum, Node[]> = new Map();\r\n\r\n    public get(type: EntityTypeEnum) {\r\n        if(!this.objectPool) {\r\n            this.objectPool = new Node('objectPool');\r\n            this.objectPool.setParent(DataManager.Instance.stage);\r\n        }\r\n\r\n        if(!this.map.has(type)) {\r\n            this.map.set(type, []);\r\n            const container = new Node(type + 'Pool');\r\n            container.setParent(this.objectPool);\r\n        }\r\n\r\n        const nodes = this.map.get(type);\r\n        if(!nodes.length) {\r\n            const prefab = DataManager.Instance.prefabMap.get(type);\r\n            const entity = instantiate(prefab);\r\n            entity.name = type;\r\n            entity.setParent(this.objectPool.getChildByName(type + 'Pool'));\r\n            entity.active = false;\r\n            return entity;\r\n        } else {\r\n            const entity = nodes.pop();\r\n            entity.active = true;\r\n            return entity;\r\n        }\r\n    }\r\n    \r\n    public ret(node: Node) {\r\n        node.active = false;\r\n        this.map.get(node.name as EntityTypeEnum).push(node);\r\n    }\r\n}\r\n"]}