{"version":3,"sources":["file:///C:/Users/ctwl/Downloads/cocos-nodejs-io-game-start-demo-master/apps/client/assets/Scripts/Scene/BattleManager.ts"],"names":["_decorator","Component","Prefab","instantiate","SpriteFrame","DataManager","JoyStickManager","ActorManager","ResourceManager","PrefabPathEnum","TexturePathEnum","EntityTypeEnum","InputTypeEnum","BulletManager","ObjectPoolManager","ccclass","property","BattleManager","_stage","_ui","shouldUpdate","onLoad","node","getChildByName","destroyAllChildren","Instance","jm","getComponentInChildren","stage","start","loadRes","initMap","prefab","prefabMap","get","Map","map","setParent","list","type","p","then","set","push","loadDir","spriteframes","textureMap","Promise","all","update","dt","render","tick","tickActor","applyInput","TimePast","data","state","actors","id","am","actorMap","renderActor","renderBullet","actor","addComponent","init","bullets","bm","bulletMap","bullet","getComponent"],"mappings":"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","sourcesContent":["import { Node } from \"cc\";\r\nimport { _decorator, Component } from \"cc\";\r\nimport DataManager from \"../Global/DataManager\";\r\nimport { JoyStickManager } from \"../UI/JoyStickManager\";\r\nimport { ActorManager } from \"../Entity/Actor/ActorManager\";\r\nimport { ResourceManager } from \"../Global/ResourceManager\";\r\nimport { Prefab } from \"cc\";\r\nimport { instantiate } from \"cc\";\r\nimport { PrefabPathEnum, TexturePathEnum } from \"../Enum\";\r\nimport { EntityTypeEnum, InputTypeEnum } from \"../Common/Enum\";\r\nimport { SpriteFrame } from \"cc\";\r\nimport { BulletManager } from \"../Entity/Bullet/BulletManager\";\r\nimport { ObjectPoolManager } from \"../Global/ObjectPoolManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BattleManager')\r\nexport class BattleManager extends Component {\r\n    private _stage: Node;\r\n    private _ui: Node;\r\n    private shouldUpdate: boolean = false;\r\n\r\n    onLoad() {\r\n        this._stage = this.node.getChildByName('Stage');\r\n        this._ui    = this.node.getChildByName('UI');\r\n        this._stage.destroyAllChildren();\r\n        DataManager.Instance.jm = this._ui.getComponentInChildren(JoyStickManager);\r\n        DataManager.Instance.stage = this.node.getChildByName('Stage');\r\n    }\r\n    \r\n    async start() {\r\n        await this.loadRes();\r\n        this.initMap();\r\n        this.shouldUpdate = true;\r\n    }\r\n\r\n    initMap() {\r\n        const prefab = DataManager.Instance.prefabMap.get(EntityTypeEnum.Map);\r\n        const map = instantiate(prefab);\r\n        map.setParent(this._stage);\r\n    }\r\n\r\n    async loadRes() {\r\n        const list = [];\r\n        for (const type in PrefabPathEnum) {\r\n            const p = ResourceManager.Instance.loadRes(PrefabPathEnum[type], Prefab).then(prefab => {\r\n                DataManager.Instance.prefabMap.set(type, prefab);\r\n            });\r\n            list.push(p);\r\n        }\r\n\r\n        for (const type in TexturePathEnum) {\r\n            const p = ResourceManager.Instance.loadDir(TexturePathEnum[type], SpriteFrame).then(spriteframes => {\r\n                DataManager.Instance.textureMap.set(type, spriteframes);\r\n            });\r\n            list.push(p);\r\n        }\r\n        \r\n        const p = await Promise.all(list);\r\n    }\r\n    \r\n    update(dt: number) {\r\n        if(!this.shouldUpdate) {\r\n            return;\r\n        }\r\n        this.render();\r\n        this.tick(dt);\r\n    }\r\n\r\n    tick(dt: number) {\r\n        this.tickActor(dt);\r\n\r\n        DataManager.Instance.applyInput({\r\n            type: InputTypeEnum.TimePast,\r\n            dt\r\n        });\r\n    }\r\n    tickActor(dt: number) {\r\n        for (const data of DataManager.Instance.state.actors) {\r\n            const {id} = data;\r\n            let am: ActorManager = DataManager.Instance.actorMap.get(id);\r\n            am.tick(dt);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.renderActor();\r\n        this.renderBullet();\r\n    }\r\n\r\n    renderActor() {\r\n        for(const data of DataManager.Instance.state.actors) {\r\n            const {id, type} = data;\r\n            let am: ActorManager = DataManager.Instance.actorMap.get(id);\r\n            if(!am) {\r\n                const prefab = DataManager.Instance.prefabMap.get(type);\r\n                const actor  = instantiate(prefab);\r\n                actor.setParent(this._stage);\r\n                let am: ActorManager = actor.addComponent(ActorManager);\r\n                DataManager.Instance.actorMap.set(data.id, am);\r\n                am.init(data);\r\n            } else {\r\n                am.render(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderBullet() {\r\n        for(const data of DataManager.Instance.state.bullets) {\r\n            const {id, type} = data;\r\n            let bm = DataManager.Instance.bulletMap.get(id);\r\n            if(!bm) {\r\n                const bullet = ObjectPoolManager.Instance.get(type);\r\n                bm = bullet.getComponent(BulletManager) || bullet.addComponent(BulletManager);\r\n                DataManager.Instance.bulletMap.set(data.id, bm);\r\n                bm.init(data);\r\n            } else {\r\n                bm.render(data);\r\n            }\r\n        }\r\n    }\r\n}"]}