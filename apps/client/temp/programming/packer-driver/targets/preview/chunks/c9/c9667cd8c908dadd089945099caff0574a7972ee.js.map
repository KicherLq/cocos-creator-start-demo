{"version":3,"sources":["file:///C:/Users/ctwl/Downloads/cocos-nodejs-io-game-start-demo-master/apps/client/assets/Scripts/Global/DataManager.ts"],"names":["DataManager","Singleton","EntityTypeEnum","InputTypeEnum","EventManager","EventEnum","ACTOR_SPEED","BULLET_SPEED","MAP_WIDTH","MAP_HEIGHT","jm","stage","actorMap","Map","bulletMap","prefabMap","textureMap","state","actors","id","type","Actor1","weaponType","Weapon1","bulletType","Bullet2","position","x","y","direction","bullets","nextBulletId","Instance","GetInstance","applyInput","input","ActorMove","deltaTime","actor","find","e","Shot","owner","bullet","get","emit","bulletBorn","push","TimePast","dt","i","length","Math","abs","explosionBorn","splice"],"mappings":"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","sourcesContent":["import { Prefab, instantiate } from 'cc';\nimport Singleton from \"../Base/Singleton\";\nimport { IActorMove, IBullet, IClientInput, IState } from \"../Common/State\";\nimport { ActorManager } from \"../Entity/Actor/ActorManager\";\nimport { JoyStickManager } from \"../UI/JoyStickManager\";\nimport { EntityTypeEnum, InputTypeEnum } from \"../Common/Enum\";\nimport { SpriteFrame } from \"cc\";\nimport { Node } from \"cc\";\nimport { BulletManager } from '../Entity/Bullet/BulletManager';\nimport EventManager from \"./EventManager\";\nimport { EventEnum } from \"../Enum\";\n\nconst ACTOR_SPEED = 100;\nconst BULLET_SPEED = 600;\nconst MAP_WIDTH = 960;\nconst MAP_HEIGHT = 640;\n\nexport default class DataManager extends Singleton {\n\tstatic get Instance() {\n\t\treturn super.GetInstance<DataManager>();\n\t}\n\n    jm: JoyStickManager;\n    stage: Node;\n    actorMap: Map<number, ActorManager> = new Map();\n    bulletMap: Map<number, BulletManager> = new Map();\n    prefabMap: Map<string, Prefab> = new Map();\n    textureMap: Map<string, SpriteFrame[]> = new Map();\n\n    state: IState = {\n        actors:[\n            { \n                id: 1, \n                type: EntityTypeEnum.Actor1,\n                weaponType: EntityTypeEnum.Weapon1,\n                bulletType: EntityTypeEnum.Bullet2,\n                position: {\n                    x: -150, \n                    y: -150\n                }, \n                direction: {\n                    x: 1, \n                    y: 0\n                },\n            },\n            { \n                id: 2, \n                type: EntityTypeEnum.Actor1,\n                weaponType: EntityTypeEnum.Weapon1,\n                bulletType: EntityTypeEnum.Bullet2,\n                position: {\n                    x: 150, \n                    y: 150\n                }, \n                direction: {\n                    x: -1, \n                    y: 0\n                },\n            },\n        ],\n        bullets: [\n\n        ],\n        nextBulletId: 1,\n    }\n\n    applyInput(input: IClientInput) {\n        switch (input.type) {\n            case InputTypeEnum.ActorMove: {\n                const { deltaTime, direction, type, id } = input;\n                const actor = this.state.actors.find(e => e.id === id);\n                actor.direction = direction;\n\n                actor.position.x += direction.x * deltaTime * ACTOR_SPEED;\n                actor.position.y += direction.y * deltaTime * ACTOR_SPEED;\n                break;\n            }\n            case InputTypeEnum.Shot: {\n                const { owner, direction, position } = input;\n                const bullet: IBullet = {\n                    id: this.state.nextBulletId++,\n                    owner, \n                    direction,\n                    position,\n                    type: this.actorMap.get(owner).bulletType,\n                }\n\n                EventManager.Instance.emit(EventEnum.bulletBorn, owner);\n                this.state.bullets.push(bullet);\n                break;\n            }\n            case InputTypeEnum.TimePast: {\n                const {dt} = input;\n                const {bullets} = this.state;\n\n                //倒序遍历子弹用于销毁已经飞出地图外的子弹\n                for(let i = bullets.length - 1; i >= 0; --i) {\n                    const bullet = bullets[i];\n                    if(Math.abs(bullet.position.x) > MAP_WIDTH / 2 || Math.abs(bullet.position.y) > MAP_HEIGHT / 2) {\n                        EventManager.Instance.emit(EventEnum.explosionBorn, bullet.id, {x: bullet.position.x, y: bullet.position.y});\n                        bullets.splice(i, 1);\n                    }\n                }\n\n                for (const bullet of bullets) {\n                    bullet.position.x += bullet.direction.x * dt * BULLET_SPEED;\n                    bullet.position.y += bullet.direction.y * dt * BULLET_SPEED;\n                }\n                break;\n            }\n        }\n\n    }\n}\n"]}