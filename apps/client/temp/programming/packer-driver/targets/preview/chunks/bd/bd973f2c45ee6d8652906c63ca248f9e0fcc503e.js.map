{"version":3,"sources":["file:///C:/Users/ctwl/Downloads/cocos-nodejs-io-game-start-demo-master/apps/client/assets/Scripts/Entity/Actor/ActorManager.ts"],"names":["_decorator","DataManager","InputTypeEnum","EntityManager","ActorStateMachine","EntityStateEnum","ccclass","property","ActorManager","init","data","fsm","addComponent","type","state","Idle","tick","deltaTime","Instance","jm","output","length","x","y","applyInput","id","ActorMove","direction","render","position","node","setPosition","setScale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACFC,MAAAA,W;;AACEC,MAAAA,a,iBAAAA,a;;AAEAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,e,iBAAAA,e;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;8BAGjBQ,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb;AAAA;AAAA,0CACgD;AAC5CC,QAAAA,IAAI,CAACC,IAAD,EAAe;AACf,eAAKC,GAAL,GAAW,KAAKC,YAAL;AAAA;AAAA,qDAAX;AACA,eAAKD,GAAL,CAASF,IAAT,CAAcC,IAAI,CAACG,IAAnB;AAEA,eAAKC,KAAL,GAAa;AAAA;AAAA,kDAAgBC,IAA7B;AACH;;AAEDC,QAAAA,IAAI,CAACC,SAAD,EAAoB;AACpB,cAAG;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,EAArB,CAAwBC,MAAxB,CAA+BC,MAA/B,EAAH,EAA4C;AACxC,gBAAM;AAACC,cAAAA,CAAD;AAAIC,cAAAA;AAAJ,gBAAS;AAAA;AAAA,4CAAYL,QAAZ,CAAqBC,EAArB,CAAwBC,MAAvC;AACA;AAAA;AAAA,4CAAYF,QAAZ,CAAqBM,UAArB,CAAgC;AAC5BC,cAAAA,EAAE,EAAE,CADwB;AAE5BZ,cAAAA,IAAI,EAAE;AAAA;AAAA,kDAAca,SAFQ;AAG5BC,cAAAA,SAAS,EAAE;AACPL,gBAAAA,CADO;AAEPC,gBAAAA;AAFO,eAHiB;AAO5BN,cAAAA;AAP4B,aAAhC,EAFwC,CAYxC;AACH;AACJ;;AAEDW,QAAAA,MAAM,CAAClB,IAAD,EAAe;AACjB,cAAM;AAACiB,YAAAA,SAAD;AAAYE,YAAAA;AAAZ,cAAwBnB,IAA9B;AACA,eAAKoB,IAAL,CAAUC,WAAV,CAAsBF,QAAQ,CAACP,CAA/B,EAAkCO,QAAQ,CAACN,CAA3C;;AACA,cAAGI,SAAS,CAACL,CAAV,KAAgB,CAAnB,EAAsB;AAClB,iBAAKQ,IAAL,CAAUE,QAAV,CAAmBL,SAAS,CAACL,CAAV,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAA1C,EAA6C,CAA7C;AACH;AACJ;;AA/B2C,O","sourcesContent":["import { _decorator, Component, input } from 'cc';\r\nimport DataManager from \"../../Global/DataManager\";\r\nimport { InputTypeEnum } from '../../Common/Enum';\r\nimport { IActor } from '../../Common/State';\r\nimport { EntityManager } from '../../Base/EntityManager';\r\nimport { ActorStateMachine } from './ActorStateMachine';\r\nimport { EntityStateEnum } from '../../Enum';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ActorManager')\r\nexport class ActorManager extends EntityManager {\r\n    init(data: IActor) {\r\n        this.fsm = this.addComponent(ActorStateMachine);\r\n        this.fsm.init(data.type);\r\n\r\n        this.state = EntityStateEnum.Idle;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n        if(DataManager.Instance.jm.output.length()) {\r\n            const {x, y} = DataManager.Instance.jm.output;\r\n            DataManager.Instance.applyInput({\r\n                id: 1,\r\n                type: InputTypeEnum.ActorMove,\r\n                direction: {\r\n                    x,\r\n                    y\r\n                },\r\n                deltaTime,\r\n            });\r\n\r\n            //console.log(DataManager.Instance.state.actors[0].position.x, DataManager.Instance.state.actors[0].position.y);\r\n        }\r\n    }\r\n\r\n    render(data: IActor) {\r\n        const {direction, position} = data;\r\n        this.node.setPosition(position.x, position.y);\r\n        if(direction.x !== 0) {\r\n            this.node.setScale(direction.x > 0 ? 1 : -1, 1);\r\n        }\r\n    }\r\n}"]}