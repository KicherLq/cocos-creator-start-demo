{"version":3,"sources":["file:///C:/Users/ctwl/Downloads/cocos-nodejs-io-game-start-demo-master/apps/client/assets/Scripts/Global/DataManager.ts"],"names":["DataManager","Singleton","EntityTypeEnum","InputTypeEnum","ACTOR_SPEED","jm","stage","actorMap","Map","bulletMap","prefabMap","textureMap","state","actors","id","type","Actor1","weaponType","Weapon1","bulletType","Bullet2","position","x","y","direction","bullets","nextBulletId","Instance","GetInstance","applyInput","input","ActorMove","deltaTime","actor","find","e","Shot","owner","bullet","get","push"],"mappings":";;;yHAYqBA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXdC,MAAAA,S;;AAIEC,MAAAA,c,iBAAAA,c;AAAgBC,MAAAA,a,iBAAAA,a;;;;;;;;;;;;;AAKnBC,MAAAA,W,GAAc,G;;yBAECJ,W,GAAN,MAAMA,WAAN;AAAA;AAAA,kCAAoC;AAAA;AAAA;AAAA,eAK/CK,EAL+C;AAAA,eAM/CC,KAN+C;AAAA,eAO/CC,QAP+C,GAOT,IAAIC,GAAJ,EAPS;AAAA,eAQ/CC,SAR+C,GAQP,IAAID,GAAJ,EARO;AAAA,eAS/CE,SAT+C,GASd,IAAIF,GAAJ,EATc;AAAA,eAU/CG,UAV+C,GAUN,IAAIH,GAAJ,EAVM;AAAA,eAY/CI,KAZ+C,GAY/B;AACZC,YAAAA,MAAM,EAAC,CACH;AACIC,cAAAA,EAAE,EAAE,CADR;AAEIC,cAAAA,IAAI,EAAE;AAAA;AAAA,oDAAeC,MAFzB;AAGIC,cAAAA,UAAU,EAAE;AAAA;AAAA,oDAAeC,OAH/B;AAIIC,cAAAA,UAAU,EAAE;AAAA;AAAA,oDAAeC,OAJ/B;AAKIC,cAAAA,QAAQ,EAAE;AACNC,gBAAAA,CAAC,EAAE,CADG;AAENC,gBAAAA,CAAC,EAAE;AAFG,eALd;AASIC,cAAAA,SAAS,EAAE;AACPF,gBAAAA,CAAC,EAAE,CADI;AAEPC,gBAAAA,CAAC,EAAE;AAFI;AATf,aADG,CADK;AAiBZE,YAAAA,OAAO,EAAE,EAjBG;AAoBZC,YAAAA,YAAY,EAAE;AApBF,WAZ+B;AAAA;;AAC/B,mBAARC,QAAQ,GAAG;AACrB,iBAAO,MAAMC,WAAN,EAAP;AACA;;AAgCEC,QAAAA,UAAU,CAACC,KAAD,EAAsB;AAC5B,kBAAQA,KAAK,CAACf,IAAd;AACI,iBAAK;AAAA;AAAA,gDAAcgB,SAAnB;AAA8B;AAC1B,oBAAM;AAAEC,kBAAAA,SAAF;AAAaR,kBAAAA,SAAb;AAAwBT,kBAAAA,IAAxB;AAA8BD,kBAAAA;AAA9B,oBAAqCgB,KAA3C;AACA,oBAAMG,KAAK,GAAG,KAAKrB,KAAL,CAAWC,MAAX,CAAkBqB,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAACrB,EAAF,KAASA,EAArC,CAAd;AACAmB,gBAAAA,KAAK,CAACT,SAAN,GAAkBA,SAAlB;AAEAS,gBAAAA,KAAK,CAACZ,QAAN,CAAeC,CAAf,IAAoBE,SAAS,CAACF,CAAV,GAAcU,SAAd,GAA0B5B,WAA9C;AACA6B,gBAAAA,KAAK,CAACZ,QAAN,CAAeE,CAAf,IAAoBC,SAAS,CAACD,CAAV,GAAcS,SAAd,GAA0B5B,WAA9C;AACA;AACH;;AACD,iBAAK;AAAA;AAAA,gDAAcgC,IAAnB;AAAyB;AACrB,oBAAM;AAAEC,kBAAAA,KAAF;AAASb,kBAAAA,SAAS,EAATA,UAAT;AAAoBH,kBAAAA;AAApB,oBAAiCS,KAAvC;AACA,oBAAMQ,MAAe,GAAG;AACpBxB,kBAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWc,YAAX,EADgB;AAEpBW,kBAAAA,KAFoB;AAGpBb,kBAAAA,SAAS,EAATA,UAHoB;AAIpBH,kBAAAA,QAJoB;AAKpBN,kBAAAA,IAAI,EAAE,KAAKR,QAAL,CAAcgC,GAAd,CAAkBF,KAAlB,EAAyBlB;AALX,iBAAxB;AAOA,qBAAKP,KAAL,CAAWa,OAAX,CAAmBe,IAAnB,CAAwBF,MAAxB;AACA;AACH;AArBL;AAwBH;;AA5D8C,O","sourcesContent":["import { Prefab } from \"cc\";\nimport Singleton from \"../Base/Singleton\";\nimport { IActorMove, IBullet, IClientInput, IState } from \"../Common/State\";\nimport { ActorManager } from \"../Entity/Actor/ActorManager\";\nimport { JoyStickManager } from \"../UI/JoyStickManager\";\nimport { EntityTypeEnum, InputTypeEnum } from \"../Common/Enum\";\nimport { SpriteFrame } from \"cc\";\nimport { Node } from \"cc\";\nimport { BulletManager } from '../Entity/Bullet/BulletManager';\n\nconst ACTOR_SPEED = 100;\n\nexport default class DataManager extends Singleton {\n\tstatic get Instance() {\n\t\treturn super.GetInstance<DataManager>();\n\t}\n\n    jm: JoyStickManager;\n    stage: Node;\n    actorMap: Map<number, ActorManager> = new Map();\n    bulletMap: Map<number, BulletManager> = new Map();\n    prefabMap: Map<string, Prefab> = new Map();\n    textureMap: Map<string, SpriteFrame[]> = new Map();\n\n    state: IState = {\n        actors:[\n            { \n                id: 1, \n                type: EntityTypeEnum.Actor1,\n                weaponType: EntityTypeEnum.Weapon1,\n                bulletType: EntityTypeEnum.Bullet2,\n                position: {\n                    x: 0, \n                    y: 0\n                }, \n                direction: {\n                    x: 1, \n                    y: 0\n                },\n            },\n        ],\n        bullets: [\n\n        ],\n        nextBulletId: 1,\n    }\n\n    applyInput(input: IClientInput) {\n        switch (input.type) {\n            case InputTypeEnum.ActorMove: {\n                const { deltaTime, direction, type, id } = input;\n                const actor = this.state.actors.find(e => e.id === id);\n                actor.direction = direction;\n\n                actor.position.x += direction.x * deltaTime * ACTOR_SPEED;\n                actor.position.y += direction.y * deltaTime * ACTOR_SPEED;\n                break;\n            }\n            case InputTypeEnum.Shot: {\n                const { owner, direction, position } = input;\n                const bullet: IBullet = {\n                    id: this.state.nextBulletId++,\n                    owner, \n                    direction,\n                    position,\n                    type: this.actorMap.get(owner).bulletType,\n                }\n                this.state.bullets.push(bullet);\n                break;\n            }\n        }\n\n    }\n}\n"]}