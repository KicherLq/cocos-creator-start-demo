{"version":3,"sources":["file:///C:/Users/ctwl/Downloads/cocos-nodejs-io-game-start-demo-master/apps/client/assets/Scripts/Base/State.ts"],"names":["State","animation","AnimationClip","Sprite","DataManager","sortSpriteFrame","ANIMATION_SPEED","constructor","fsm","path","wrapMode","force","WrapMode","Normal","animationClip","track","ObjectTrack","TrackPath","toComponent","toProperty","spriteFrames","Instance","textureMap","get","frames","map","item","index","channel","curve","assignSorted","name","duration","length","addTrack","run","animationComponent","defaultClip","play"],"mappings":";;;+IAcqBA,K;;;;;;;;;;;;;;;;;;;;;;;AAdZC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,M,OAAAA,M;;AAC5BC,MAAAA,W;;AAEEC,MAAAA,e,iBAAAA,e;;;;;;;;;AAGT;AACA;AACA;iCACaC,e,GAAkB,IAAI,E;AAEnC;AACA;AACA;;;yBACqBN,K,GAAN,MAAMA,KAAN,CAAY;AAEvBO,QAAAA,WAAW,CACCC,GADD,EAECC,IAFD,EAGCC,QAHD,EAICC,KAJD,EAKT;AAAA,cAFUD,QAEV;AAFUA,YAAAA,QAEV,GAF6CR,aAAa,CAACU,QAAd,CAAuBC,MAEpE;AAAA;;AAAA,cADUF,KACV;AADUA,YAAAA,KACV,GAD2B,KAC3B;AAAA;;AAAA,eANMG,aAMN;AAAA,eAJUN,GAIV,GAJUA,GAIV;AAAA,eAHUC,IAGV,GAHUA,IAGV;AAAA,eAFUC,QAEV,GAFUA,QAEV;AAAA,eADUC,KACV,GADUA,KACV;AACE;AACA,cAAMI,KAAK,GAAG,IAAId,SAAS,CAACe,WAAd,EAAd;AACAD,UAAAA,KAAK,CAACN,IAAN,GAAa,IAAIR,SAAS,CAACgB,SAAd,GAA0BC,WAA1B,CAAsCf,MAAtC,EAA8CgB,UAA9C,CAAyD,aAAzD,CAAb;AACA,cAAMC,YAAY,GAAG;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,UAArB,CAAgCC,GAAhC,CAAoC,KAAKd,IAAzC,CAArB;AACA,cAAMe,MAAoC,GAAG;AAAA;AAAA,kDAAgBJ,YAAhB,EAA8BK,GAA9B,CAAkC,CAACC,IAAD,EAAOC,KAAP,KAAiB,CAACA,KAAK,GAAGrB,eAAT,EAA0BoB,IAA1B,CAAnD,CAA7C;AACAX,UAAAA,KAAK,CAACa,OAAN,CAAcC,KAAd,CAAoBC,YAApB,CAAiCN,MAAjC,EANF,CAQE;;AACA,eAAKV,aAAL,GAAqB,IAAIZ,aAAJ,EAArB;AACA,eAAKY,aAAL,CAAmBiB,IAAnB,GAA0B,KAAKtB,IAA/B;AACA,eAAKK,aAAL,CAAmBkB,QAAnB,GAA8BR,MAAM,CAACS,MAAP,GAAgB3B,eAA9C;AACA,eAAKQ,aAAL,CAAmBoB,QAAnB,CAA4BnB,KAA5B;AACA,eAAKD,aAAL,CAAmBJ,QAAnB,GAA8B,KAAKA,QAAnC;AACH;;AAEDyB,QAAAA,GAAG,GAAG;AAAA;;AACF,cAAI,+BAAK3B,GAAL,CAAS4B,kBAAT,CAA4BC,WAA5B,2CAAyCN,IAAzC,MAAkD,KAAKjB,aAAL,CAAmBiB,IAArE,IAA6E,CAAC,KAAKpB,KAAvF,EAA8F;AAC1F;AACH;;AACD,eAAKH,GAAL,CAAS4B,kBAAT,CAA4BC,WAA5B,GAA0C,KAAKvB,aAA/C;AACA,eAAKN,GAAL,CAAS4B,kBAAT,CAA4BE,IAA5B;AACH;;AA7BsB,O","sourcesContent":["import { animation, AnimationClip, Sprite, SpriteFrame } from \"cc\";\nimport DataManager from \"../Global/DataManager\";\nimport { ResourceManager } from \"../Global/ResourceManager\";\nimport { sortSpriteFrame } from \"../Utils\";\nimport StateMachine from \"./StateMachine\";\n\n/***\n * unit:milisecond\n */\nexport const ANIMATION_SPEED = 1 / 10;\n\n/***\n * 状态（每组动画的承载容器，持有SpriteAnimation组件执行播放）\n */\nexport default class State {\n    private animationClip: AnimationClip;\n    constructor(\n        private fsm: StateMachine,\n        private path: string,\n        private wrapMode: AnimationClip.WrapMode = AnimationClip.WrapMode.Normal,\n        private force: boolean = false\n    ) {\n        //生成动画轨道属性\n        const track = new animation.ObjectTrack();\n        track.path = new animation.TrackPath().toComponent(Sprite).toProperty(\"spriteFrame\");\n        const spriteFrames = DataManager.Instance.textureMap.get(this.path);\n        const frames: Array<[number, SpriteFrame]> = sortSpriteFrame(spriteFrames).map((item, index) => [index * ANIMATION_SPEED, item]);\n        track.channel.curve.assignSorted(frames);\n\n        //动画添加轨道\n        this.animationClip = new AnimationClip();\n        this.animationClip.name = this.path;\n        this.animationClip.duration = frames.length * ANIMATION_SPEED;\n        this.animationClip.addTrack(track);\n        this.animationClip.wrapMode = this.wrapMode;\n    }\n\n    run() {\n        if (this.fsm.animationComponent.defaultClip?.name === this.animationClip.name && !this.force) {\n            return;\n        }\n        this.fsm.animationComponent.defaultClip = this.animationClip;\n        this.fsm.animationComponent.play();\n    }\n}\n"]}