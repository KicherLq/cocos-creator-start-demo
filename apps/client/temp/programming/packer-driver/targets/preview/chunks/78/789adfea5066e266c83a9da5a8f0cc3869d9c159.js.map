{"version":3,"sources":["file:///C:/Users/ctwl/Downloads/cocos-nodejs-io-game-start-demo-master/apps/client/assets/Scripts/Entity/Actor/ActorManager.ts"],"names":["_decorator","instantiate","DataManager","EntityTypeEnum","InputTypeEnum","EntityManager","ActorStateMachine","EntityStateEnum","WeaponManager","ccclass","property","ActorManager","init","data","fsm","addComponent","type","state","Idle","prefeb","Instance","prefabMap","get","Weapon1","weapon","setParent","node","wm","tick","deltaTime","jm","output","length","x","y","applyInput","id","ActorMove","direction","Run","render","position","setPosition","setScale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAOAC,MAAAA,W,OAAAA,W;;AANFC,MAAAA,W;;AACEC,MAAAA,c,iBAAAA,c;AAAgBC,MAAAA,a,iBAAAA,a;;AAEhBC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,e,iBAAAA,e;;AAEAC,MAAAA,a,iBAAAA,a;;;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;8BAGjBW,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb;AAAA;AAAA,0CACgD;AAC5CC,QAAAA,IAAI,CAACC,IAAD,EAAe;AACf,eAAKC,GAAL,GAAW,KAAKC,YAAL;AAAA;AAAA,qDAAX;AACA,eAAKD,GAAL,CAASF,IAAT,CAAcC,IAAI,CAACG,IAAnB;AAEA,eAAKC,KAAL,GAAa;AAAA;AAAA,kDAAgBC,IAA7B;AACA,cAAMC,MAAM,GAAG;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,SAArB,CAA+BC,GAA/B,CAAmC;AAAA;AAAA,gDAAeC,OAAlD,CAAf;AACA,cAAMC,MAAM,GAAGvB,WAAW,CAACkB,MAAD,CAA1B;AACAK,UAAAA,MAAM,CAACC,SAAP,CAAiB,KAAKC,IAAtB;AACA,cAAMC,EAAE,GAAGH,MAAM,CAACT,YAAP;AAAA;AAAA,6CAAX;AACAY,UAAAA,EAAE,CAACf,IAAH,CAAQC,IAAR;AACH;;AAEDe,QAAAA,IAAI,CAACC,SAAD,EAAoB;AACpB,cAAG;AAAA;AAAA,0CAAYT,QAAZ,CAAqBU,EAArB,CAAwBC,MAAxB,CAA+BC,MAA/B,EAAH,EAA4C;AACxC,gBAAM;AAACC,cAAAA,CAAD;AAAIC,cAAAA;AAAJ,gBAAS;AAAA;AAAA,4CAAYd,QAAZ,CAAqBU,EAArB,CAAwBC,MAAvC;AACA;AAAA;AAAA,4CAAYX,QAAZ,CAAqBe,UAArB,CAAgC;AAC5BC,cAAAA,EAAE,EAAE,CADwB;AAE5BpB,cAAAA,IAAI,EAAE;AAAA;AAAA,kDAAcqB,SAFQ;AAG5BC,cAAAA,SAAS,EAAE;AACPL,gBAAAA,CADO;AAEPC,gBAAAA;AAFO,eAHiB;AAO5BL,cAAAA;AAP4B,aAAhC;AAUA,iBAAKZ,KAAL,GAAa;AAAA;AAAA,oDAAgBsB,GAA7B;AACH,WAbD,MAaO;AACH,iBAAKtB,KAAL,GAAa;AAAA;AAAA,oDAAgBC,IAA7B;AACH;AACJ;;AAEDsB,QAAAA,MAAM,CAAC3B,IAAD,EAAe;AACjB,cAAM;AAACyB,YAAAA,SAAD;AAAYG,YAAAA;AAAZ,cAAwB5B,IAA9B;AACA,eAAKa,IAAL,CAAUgB,WAAV,CAAsBD,QAAQ,CAACR,CAA/B,EAAkCQ,QAAQ,CAACP,CAA3C;;AACA,cAAGI,SAAS,CAACL,CAAV,KAAgB,CAAnB,EAAsB;AAClB,iBAAKP,IAAL,CAAUiB,QAAV,CAAmBL,SAAS,CAACL,CAAV,GAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAC,CAA1C,EAA6C,CAA7C;AACH;AACJ;;AAtC2C,O","sourcesContent":["import { _decorator, Component, input } from 'cc';\r\nimport DataManager from \"../../Global/DataManager\";\r\nimport { EntityTypeEnum, InputTypeEnum } from '../../Common/Enum';\r\nimport { IActor } from '../../Common/State';\r\nimport { EntityManager } from '../../Base/EntityManager';\r\nimport { ActorStateMachine } from './ActorStateMachine';\r\nimport { EntityStateEnum } from '../../Enum';\r\nimport { instantiate } from 'cc';\r\nimport { WeaponManager } from '../Weapon/WeaponManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ActorManager')\r\nexport class ActorManager extends EntityManager {\r\n    init(data: IActor) {\r\n        this.fsm = this.addComponent(ActorStateMachine);\r\n        this.fsm.init(data.type);\r\n\r\n        this.state = EntityStateEnum.Idle;\r\n        const prefeb = DataManager.Instance.prefabMap.get(EntityTypeEnum.Weapon1);\r\n        const weapon = instantiate(prefeb);\r\n        weapon.setParent(this.node);\r\n        const wm = weapon.addComponent(WeaponManager);\r\n        wm.init(data);\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n        if(DataManager.Instance.jm.output.length()) {\r\n            const {x, y} = DataManager.Instance.jm.output;\r\n            DataManager.Instance.applyInput({\r\n                id: 1,\r\n                type: InputTypeEnum.ActorMove,\r\n                direction: {\r\n                    x,\r\n                    y\r\n                },\r\n                deltaTime,\r\n            });\r\n\r\n            this.state = EntityStateEnum.Run;\r\n        } else {\r\n            this.state = EntityStateEnum.Idle;\r\n        }\r\n    }\r\n\r\n    render(data: IActor) {\r\n        const {direction, position} = data;\r\n        this.node.setPosition(position.x, position.y);\r\n        if(direction.x !== 0) {\r\n            this.node.setScale(direction.x > 0 ? 1 : -1, 1);\r\n        }\r\n    }\r\n}"]}